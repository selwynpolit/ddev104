<?php

/**
 * @file
 * Primary module hooks for WECC Node Access module.
 */


use Drupal\Core\Session\AccountInterface;
use Drupal\node\NodeInterface;
use Drupal\Core\Access\AccessResult;
use \Drupal\user\Entity\User;
use \Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_node_access().
 */
function wecc_node_access_node_access(NodeInterface $node, $op, AccountInterface $account): AccessResult {
  $type = $node->bundle();
  if ($type !== 'page') {
    return AccessResult::neutral();
  }

  if ($op == 'update') {
    // Load term id from field field_wecc_edit_access.
    $node_edit_access_tid = $node->get('field_wecc_edit_access')->target_id;
    if (is_null($node_edit_access_tid)) {
//      return AccessResult::neutral();
      return AccessResult::neutral()->addCacheableDependency($node);
    }

    // load the field_wecc_user_edit_access from the user.
    $user = User::load($account->id());
    // load all the values from the field field_wecc_user_edit_access.
    $user_edit_access_tids = $user->get('field_wecc_user_edit_access')->getValue();
    if (empty($user_edit_access_tids)) {
//      return AccessResult::neutral();
      return AccessResult::neutral()->addCacheableDependency($user);
    }

    // Check if user has role 'content_editor'.
    if (!$account->hasRole('content_editor')) {
//      return AccessResult::neutral();
      return AccessResult::neutral()->addCacheContexts(['user.roles']);
    }

    // Build an array of the term ids stored in the field field_wecc_user_edit_access.
    $user_tids = [];
    foreach ($user_edit_access_tids as $user_edit_access_tid) {
      $user_tids[] = $user_edit_access_tid['target_id'];
    }
    if (in_array($node_edit_access_tid, $user_tids)) {
//      return AccessResult::allowed();
      return AccessResult::allowed()->addCacheableDependency($node)->addCacheableDependency($user);

    }
  }
//  return AccessResult::neutral();
  return AccessResult::neutral()->addCacheableDependency($node);
}


/**
 * Implements hook_form_alter().
 */
function wecc_node_access_form_alter(&$form,FormStateInterface $form_state, $form_id)
{
 // Modify form to hide field field_wecc_edit_access if user does not have role 'admin'.
  $user = \Drupal::currentUser();
  if (!$user->hasRole('administrator')) {
    if (isset($form['field_wecc_edit_access'])) {
      $form['field_wecc_edit_access']['#access'] = FALSE;
    }
  }
}
